name: Docker Build Caddy & Redeploy All

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  # Repos can be uppercase but tags can't, so hardcode where needed
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-caddy:
    runs-on: ubuntu-latest

    # For the Github Action token
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        # 3.4.0 March 15 2025
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        # v5.7.0 February 26 2025
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        # v6.18.0 May 28 2025
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: ./Caddy
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          # This gets repo description which isn't quite accurate/useful
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: false

  redeploy-all-to-vps:
    runs-on: ubuntu-latest
    needs: build-and-push-caddy
    steps:
      - name: SSH to EC2 and down compose
        # March 9, 2025, won't bother pinning since it has super sketchy transient dep anyway
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /srv/
            docker-compose down
            rm compose.yaml

      - name: Copy new compose VPS
        # April 26 2025, ditto
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "compose.yaml"
          target: "/srv/"

      - name: SSH to EC2 and restart compose
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /srv/
            docker-compose up -d --pull always
            docker image prune
